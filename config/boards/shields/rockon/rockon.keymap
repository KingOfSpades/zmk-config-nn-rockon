#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define FUNC    3

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
    };
  };

/ {
    macros {
        hem: hem {
            label = "hem";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp BSPC>
                , <&macro_wait_time 100>
                , <&macro_press &kp LSHFT &kp LCTRL &kp LALT>
                ;
        };
    };
};

/ {
    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
    &kp EQUAL  &kp N1      &kp N2      &kp N3      &kp N4        &kp N5       &trans               &trans          &kp N6         &kp N7        &kp N8        &kp N9      &kp N0      &kp MINUS
    &kp GRAVE  &kp Q       &kp W       &kp E       &kp R         &kp T        &trans               &trans          &kp Y          &kp U         &kp I         &kp O       &kp P       &kp BSLH
    &kp LGUI   &kp A       &kp S       &kp D       &kp F         &kp G        &trans               &trans          &kp H          &kp J         &kp K         &kp L       &kp SEMI    &kp SQT
    &mt LSHIFT LPAR &kp Z  &kp X       &kp C       &kp V         &kp B        &trans               &trans          &kp N          &kp M         &kp COMMA     &kp DOT     &kp FSLH    &mt RSHIFT RPAR
               &mt LCTL ESC   &kp LALT    &mo LWR       &kp LGUI     &mt LS(LALT) SPACE   &mt LS(RC(LALT)) BSPC    &kp TAB        &mo RAS       &kp RET       &trans
            >;
        };

        nav_layer {
            label = "Lower";
            
            bindings = <
    &trans     &trans       &trans       &trans      &trans        &trans      &trans               &trans     &trans        &trans       &trans        &trans      &trans      &trans
    &trans     &kp ESC      &kp PG_UP    &kp UP      &kp PG_DN     &trans      &trans               &trans     &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp MINUS   &trans
    &trans     &kp HOME     &kp LEFT     &kp DOWN    &kp RIGHT     &kp END     &trans               &trans     &kp LEFT      &kp DOWN     &kp UP        &kp RIGHT   &kp PLUS    &trans
    &trans     &trans       &trans       &trans      &trans        &trans      &trans               &trans     &kp LBKT      &kp RBKT     &kp N2        &kp N3      &kp N0      &trans
                            &trans       &trans      &trans        &trans      &trans               &trans     &kp SPACE     &kp DOT      &trans        &trans
            >;
        };

        sym_layer {
            label = "Raise";

            bindings = <
    &trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2    &trans           &trans        &bt BT_CLR         &trans         &trans        &trans            &trans        &trans      &trans      &trans
    &trans     &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT     &trans         &trans         &kp CARET     &kp AMPS          &kp ASTRK     &kp UNDER   &kp EQUAL   &trans
    &trans     &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp LT        &trans         &trans         &kp GT        &kp RPAR          &kp RBRC      &kp RBKT    &kp PLUS    &trans
    &trans     &kp CAPS     &kp GRAVE    &kp LC(LS(TAB)) &kp LC(LG(LEFT)) &caps_word    &trans         &trans         &trans        &kp LC(LG(RIGHT)) &kp LC(TAB)   &trans      &kp BSLH    &trans
                            &trans       &trans          &trans           &kp RET       &kp DEL        &kp BSPC       &trans        &trans            &trans        &trans
            >;
        };

        func_layer {
            label = "Function";

            bindings = <
    &trans     &trans       &trans        &trans       &trans        &trans        &trans             &trans     &trans           &trans       &trans        &trans      &trans      &trans
    &trans     &trans       &kp LS(PG_UP) &kp LS(UP)   &kp LS(PG_DN) &trans        &trans             &trans     &kp C_PLAY_PAUSE &kp F7       &kp F8        &kp F9      &kp F10     &trans
    &trans     &kp LS(HOME) &kp LS(LEFT)  &kp LS(DOWN) &kp LS(RIGHT) &kp LS(END)   &trans             &trans     &kp K_VOL_UP     &kp F4       &kp F5        &kp F6      &kp F11     &trans
    &trans     &trans       &trans        &trans       &trans        &kp C_MUTE    &trans             &trans     &kp K_VOL_DN     &kp F1       &kp F2        &kp F3      &kp F12     &trans
                            &trans        &trans       &trans        &trans        &trans             &trans     &trans           &kp SPACE    &trans        &trans
            >;
        };
    };
};
