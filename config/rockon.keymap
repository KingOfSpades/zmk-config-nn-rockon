#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define FUNC    3

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    combos {
    };
};

/ {
    macros {
        hem: hem {
            label = "hem";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp BSPC>,
                <&macro_wait_time 100>,
                <&macro_press>,
                <&kp LSHFT &kp LCTRL &kp LALT>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <60 61>;
            bindings = <&kp ENTER>;
        };
    };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        am: amethyst_modifyers {
            compatible = "zmk,behavior-hold-tap";
            label = "AMETHYST_MODIFYER";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";
            bindings = <
&kp EQUAL        &kp N1       &kp N2      &kp N3      &kp N4      &kp N5    &trans                                                   &trans                 &kp N6  &kp N7      &kp N8       &kp N9      &kp N0          &kp MINUS
&kp GRAVE        &kp Q        &kp W       &kp E       &kp R       &kp T     &trans                                                   &trans                 &kp Y   &kp U       &kp I        &kp O       &kp P           &kp BSLH
&kp ESC          &hs LSHFT A  &hm LALT S  &hm LCTL D  &hm LGUI F  &kp G     &trans                                                   &trans                 &kp H   &hm RCMD J  &hm RCTRL K  &hm RALT L  &hs LSHFT SEMI  &kp SQT
&mt LSHIFT LPAR  &kp Z        &kp X       &kp C       &kp V       &kp B     &mt LA(SPACE) LG(SPACE)                                  &mt LA(LG(SPACE)) F12  &kp N   &kp M       &kp COMMA    &kp DOT     &kp FSLH        &mt RSHIFT RPAR
                              &trans      &trans      &mo LWR     &kp LCMD  &am LS(LALT) SPACE       &am LS(RC(LALT)) BSPC  &kp TAB  &mo RAS                &trans  &trans
            >;
        };

        nav_layer {
            label = "Lower";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans            &trans    &trans    &trans  &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans            &trans    &trans    &trans  &trans     &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &trans            &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans                  &kp LS(LG(RBRC))  &kp LBKT  &kp RBKT  &trans  &trans     &trans    &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans            &trans    &trans
            >;
        };

        sym_layer {
            label = "Raise";
            bindings = <
&trans  &trans  &trans    &trans         &trans       &trans    &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans    &trans         &trans       &trans    &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &kp C_VOL_UP
&trans  &trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END   &trans                            &trans  &trans  &trans  &trans  &trans  &trans  &kp C_VOL_DN
&trans  &trans  &trans    &trans         &kp LBRC     &kp RBRC  &kp LS(LG(LBRC))                  &trans  &trans  &trans  &trans  &trans  &trans  &kp C_MUTE
                &trans    &trans         &trans       &trans    &trans            &trans  &trans  &trans  &trans  &trans
            >;
        };

        func_layer {
            label = "Function";
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &trans                  &trans     &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans        &trans        &trans        &trans        &trans      &trans                  &trans     &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &trans        &trans        &trans        &trans        &trans      &trans                  &trans     &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans        &trans        &trans        &trans        &trans      &trans                  &trans     &trans  &kp F1  &kp F2  &kp F3  &kp F12  &trans
                      &trans        &trans        &trans        &trans      &trans  &trans  &trans  &kp SPACE  &trans  &trans
            >;
        };
    };
};
